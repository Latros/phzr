(ns phzr.impl.accessors.physics.p2)

(def p2-get-properties
  {:collision-groups "collisionGroups"
   :use-elapsed-time "useElapsedTime"
   :paused "paused"
   :on-constraint-removed "onConstraintRemoved"
   :on-body-added "onBodyAdded"
   :frame-rate "frameRate"
   :game "game"
   :time "time"
   :on-begin-contact "onBeginContact"
   :everything-collision-group "everythingCollisionGroup"
   :sleep-mode "sleepMode"
   :walls "walls"
   :gravity "gravity"
   :nothing-collision-group "nothingCollisionGroup"
   :on-contact-material-removed "onContactMaterialRemoved"
   :on-end-contact "onEndContact"
   :post-broadphase-callback "postBroadphaseCallback"
   :apply-damping "applyDamping"
   :on-spring-removed "onSpringRemoved"
   :apply-spring-forces "applySpringForces"
   :total "total"
   :restitution "restitution"
   :apply-gravity "applyGravity"
   :bounds-collides-with "boundsCollidesWith"
   :callback-context "callbackContext"
   :bounds-collision-group "boundsCollisionGroup"
   :on-spring-added "onSpringAdded"
   :on-contact-material-added "onContactMaterialAdded"
   :solve-constraints "solveConstraints"
   :emit-impact-event "emitImpactEvent"
   :on-constraint-added "onConstraintAdded"
   :friction "friction"
   :contact-material "contactMaterial"
   :on-body-removed "onBodyRemoved"})

(def p2-set-properties
  {:collision-groups "collisionGroups"
   :use-elapsed-time "useElapsedTime"
   :paused "paused"
   :on-constraint-removed "onConstraintRemoved"
   :on-body-added "onBodyAdded"
   :frame-rate "frameRate"
   :game "game"
   :on-begin-contact "onBeginContact"
   :everything-collision-group "everythingCollisionGroup"
   :sleep-mode "sleepMode"
   :walls "walls"
   :gravity "gravity"
   :nothing-collision-group "nothingCollisionGroup"
   :on-contact-material-removed "onContactMaterialRemoved"
   :on-end-contact "onEndContact"
   :post-broadphase-callback "postBroadphaseCallback"
   :apply-damping "applyDamping"
   :on-spring-removed "onSpringRemoved"
   :apply-spring-forces "applySpringForces"
   :restitution "restitution"
   :apply-gravity "applyGravity"
   :bounds-collides-with "boundsCollidesWith"
   :callback-context "callbackContext"
   :bounds-collision-group "boundsCollisionGroup"
   :on-spring-added "onSpringAdded"
   :on-contact-material-added "onContactMaterialAdded"
   :solve-constraints "solveConstraints"
   :emit-impact-event "emitImpactEvent"
   :on-constraint-added "onConstraintAdded"
   :friction "friction"
   :contact-material "contactMaterial"
   :on-body-removed "onBodyRemoved"})