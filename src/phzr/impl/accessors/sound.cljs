(ns phzr.impl.accessors.sound)

(def sound-get-properties
  {:paused "paused"
   :current-time "currentTime"
   :on-resume "onResume"
   :on-marker-complete "onMarkerComplete"
   :key "key"
   :external-node "externalNode"
   :game "game"
   :is-playing "isPlaying"
   :fade-tween "fadeTween"
   :name "name"
   :allow-multiple "allowMultiple"
   :paused-time "pausedTime"
   :gain-node "gainNode"
   :start-time "startTime"
   :duration "duration"
   :stop-time "stopTime"
   :duration-ms "durationMS"
   :volume "volume"
   :loop "loop"
   :master-gain-node "masterGainNode"
   :pending-playback "pendingPlayback"
   :markers "markers"
   :on-stop "onStop"
   :is-decoded "isDecoded"
   :total-duration "totalDuration"
   :on-mute "onMute"
   :using-audio-tag "usingAudioTag"
   :context "context"
   :position "position"
   :autoplay "autoplay"
   :paused-position "pausedPosition"
   :override "override"
   :on-pause "onPause"
   :on-play "onPlay"
   :is-decoding "isDecoding"
   :on-fade-complete "onFadeComplete"
   :current-marker "currentMarker"
   :on-decoded "onDecoded"
   :on-loop "onLoop"
   :using-web-audio "usingWebAudio"
   :mute "mute"})

(def sound-set-properties
  {:paused "paused"
   :current-time "currentTime"
   :on-resume "onResume"
   :on-marker-complete "onMarkerComplete"
   :key "key"
   :external-node "externalNode"
   :game "game"
   :is-playing "isPlaying"
   :fade-tween "fadeTween"
   :name "name"
   :allow-multiple "allowMultiple"
   :paused-time "pausedTime"
   :gain-node "gainNode"
   :start-time "startTime"
   :duration "duration"
   :stop-time "stopTime"
   :duration-ms "durationMS"
   :volume "volume"
   :loop "loop"
   :master-gain-node "masterGainNode"
   :markers "markers"
   :on-stop "onStop"
   :total-duration "totalDuration"
   :on-mute "onMute"
   :using-audio-tag "usingAudioTag"
   :context "context"
   :position "position"
   :autoplay "autoplay"
   :paused-position "pausedPosition"
   :override "override"
   :on-pause "onPause"
   :on-play "onPlay"
   :on-fade-complete "onFadeComplete"
   :current-marker "currentMarker"
   :on-decoded "onDecoded"
   :on-loop "onLoop"
   :mute "mute"})